---

- name: Install Node-Agent
  hosts: machines

  tasks:
    - name: Install Packages
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      become: yes
      vars:
        packages:
          - iproute2
          - python3
          - python3-pip
          - rsync
          - chrony

    - name: Copy Netplan Configuration
      copy:
        src: "{{ playbook_dir }}/../run/machines/{{ hostvars[inventory_hostname].machine_name }}/netplan.yml"
        dest: "/etc/netplan/50-cloud-init.yaml"
      become: yes

    # - name: Apply Netplan Configuration
    #   shell: netplan --debug apply
    #   become: yes

      # to allow non-root usage to use tcconfig for easier manual debugging
    - name: Allow TC Usage
      shell: setcap cap_net_admin+ep /usr/sbin/tc
      become: yes

    - name: Install Node
      script: scripts/install_node.sh

    - name: Install TCConfig
      shell: pip3 install "tcconfig==0.25.2"
      become: yes

    - name: Install Docker
      script: scripts/install_docker.sh

    - name: Install Docker SDK
      pip:
        name: docker
      become: yes

    - name: Start Docker Service
      service:
        name: docker
        state: started
      become: yes

    - name: Create Docker Group for non Sudo Access
      shell: groupadd docker
      become: yes
      ignore_errors: yes

    - name: Add User to Docker Group
      user:
        name: ubuntu
        group: docker
      become: yes

    - name: Copy Agent
      synchronize:
        src: "{{ playbook_dir }}/../../node-agent"
        dest: "~/"

    - name: Install Agent
      npm:
        path: "~/node-agent"
        state: present

    - name: Allow Hard Time Sync
      lineinfile:
        path: /etc/chrony/chrony.conf
        line: makestep 1 -1
        create: yes
      become: yes

    - name: Synchronize Time
      service:
        name: chronyd
        state: restarted
      become: yes

    - name: Kill Active Screen Sessions
      shell: pkill screen
      ignore_errors: yes

    - name: Wipe Dead Screen Sessions
      shell: screen -wipe
      ignore_errors: yes

    - name: Start Agent Screen
      shell: screen -d -m -L -S agent node app.js
      args:
        chdir: node-agent/
      environment:
        AGENT_PORT: "{{ agent_port }}"

