{
    "states": [
        {
            "state_name": "initial",
            "connection_manipulation_instructions": "reset",
            "machine_manipulation_instructions": "reset",
            "application_instructions": [],
            "state_notifications": [],
            "transition_conditions": [
                {
                    "type": "time-based",
                    "active-for": 20000,
                    "next_state": "memory1"
                }
            ]
        },
        {
            "state_name": "memory1",
            "connection_manipulation_instructions": [],
            // overwrite machine resource defaults/the properties defined in infrastructure.jsonc
            "machine_manipulation_instructions": [
                {
                    "machine_name": "server1",
                    "memory": "200m"
                }
            ],
            "application_instructions": [
                {
                    "target_container": "crexplorer",
                    "path": "/prepare",
                    "port": 8080,
                    "query_strings": {
                        "max_memory": 200
                    }
                }
            ],
            "state_notifications": [
                {
                    "target_container": "crexplorer",
                    "path": "/state",
                    "port": 8080
                },
                {
                    "target_container": "node-exporter",
                    "path": "/state",
                    "port": 9100 // does not really listen here, but this makes the node-exporter available via the public internet
                }
            ],
            "transition_conditions": [
                {
                    "type": "message-based",
                    "event_name": "cpu",
                    "threshold": 2,
                    "next_state": "network1"
                },
                {
                    "type": "message-based",
                    "event_name": "memory",
                    "threshold": 1, // as server-1 has not enough memory
                    "next_state": "network1"
                },
                {
                    "type": "time-based",
                    "active-for": 20000, // minimum time in state so we get enough pings
                    "next_state": "network1"
                }
            ]
        },
        {
            "state_name": "network1",
            "connection_manipulation_instructions": [
                {
                    "from": "server2",
                    "to": "server3",
                    "delay": 10,
                    "loss": 20 // 20% chance for package loss
                }
            ],
            "machine_manipulation_instructions": "reset",
            "application_instructions": [],
            "state_notifications": [
                {
                    "target_container": "crexplorer",
                    "path": "/state",
                    "port": 8080
                }
            ],
            "transition_conditions": [
                {
                    "type": "message-based",
                    "event_name": "cpu",
                    "threshold": 2,
                    "next_state": "cpu1"
                },
                {
                    "type": "message-based",
                    "event_name": "memory",
                    "threshold": 2,
                    "next_state": "cpu1"
                },
                {
                    "type": "time-based",
                    "active-for": 20000,
                    "next_state": "cpu1"
                }
            ]
        },
        {
            "state_name": "cpu1",
            "connection_manipulation_instructions": "reset",
            "machine_manipulation_instructions": [
                {
                    "machine_name": "server1",
                    "cpu": 0.5
                }
            ],
            "application_instructions": [],
            "state_notifications": [
                {
                    "target_container": "crexplorer",
                    "path": "/state",
                    "port": 8080
                }
            ],
            "transition_conditions": [
                {
                    "type": "message-based",
                    "event_name": "cpu",
                    "threshold": 2,
                    "next_state": "final"
                },
                {
                    "type": "message-based",
                    "event_name": "memory",
                    "threshold": 2,
                    "next_state": "final"
                },
                {
                    "type": "time-based",
                    "active-for": 20000,
                    "next_state": "final"
                }
            ]
        },
        {
            "state_name": "final",
            "connection_manipulation_instructions": "reset",
            "machine_manipulation_instructions": "reset",
            "application_instructions": [],
            "state_notifications": [
                {
                    "target_container": "crexplorer",
                    "path": "/state",
                    "port": 8080
                }
            ],
            "transition_conditions": []
        }
    ]
}