// defines the orchestration schedule and meta data
{
    "maximum_state_change_delay": 5, // in ms; if the Node Manager detects a larger delay, the orchestration schedule exeuction is invalid
    // each state comprises instructions applied while transitioning to this state and conditions for state transitions
    "states": [
        {
            "state_name": "initial", // the name of the first state must be initial, use it to reset the infrastructure
            "connection_manipulation_instructions": "reset", // this re-applies all connection manipulations from infrastructure.jsonc
            "machine_manipulation_instructions": "reset", // this re-applies all machine manipulations from infrastructure.jsonc
            "application_instructions": [],
            // the node manager can notify containers about the successful transition to a new state via HTTP GET, containers have to acknowledge the notifications (HTTP 200)
            "state_notifications": [
                {
                    "target_container": "camera", // will be sent to the public ip and port of each machine that this container is deployed on
                    "path": "/state/notifications", // target url path for the notification request
                    "port": 8011 // the port at which the application waits for notifications
                },
                {
                    "target_container": "temperature-sensor",
                    "path": "/state/notifications",
                    "port": 8012
                }
            ],
            // when all conditions for the transition to any stage are met, a transition to this state begins
            "transition_conditions": [
                {
                    "type": "time-based", // the type can be time or event
                    "active-for": 60000, // how long to stay in this state if type = time
                    "next_state": "baseline"
                }
            ]
        },
        {
            "state_name": "baseline",
            "connection_manipulation_instructions": [],
            "machine_manipulation_instructions": [],      
            "application_instructions": [],
            "state_notifications": [
                 {
                    "target_container": "camera",
                    "path": "/state/notifications",
                    "port": 8011
                },
                {
                    "target_container": "temperature-sensor",
                    "path": "/state/notifications",
                    "port": 8012
                }   
            ],
            "transition_conditions": [
                // only when both conditions are met, transition to slow-down-factory-server
                {
                    "type": "time-based",
                    "active-for": 300000,
                    "next_state": "slow-down-factory-server"
                },
                {
                    "type": "message-based",
                    "event_name": "dashboard-generated",
                    "threshold": 295, // how often the defined event_name must be sent to the node manager transition endpoint
                    "next_state": "slow-down-factory-server"
                },
                {
                    "type": "time-based",
                    "active-for": 305000,
                    "next_state": "failed"
                }
            ]
        },
        {
            "state_name": "slow-down-factory-server",
            "connection_manipulation_instructions": [],
            // machine updates overwrite the connection properties of the initial state (defined in infrastructure.jsonc) and prior state updates
            "machine_manipulation_instructions": [
                {
                    "machine_name": "factory-server",
                    "cpu": "1.0"
                }
            ],      
            "application_instructions": [],
            "state_notifications": [
                 {
                    "target_container": "camera",
                    "path": "/state/notifications",
                    "port": 8011
                },
                {
                    "target_container": "temperature-sensor",
                    "path": "/state/notifications",
                    "port": 8012
                }   
            ],
            "transition_conditions": [
                {
                    "type": "time-based",
                    "active-for": 300000,
                    "next_state": "gateway-factory-troubles"
                },
                {
                    "type": "message-based",
                    "event_name": "dashboard-generated",
                    "threshold": 295,
                    "next_state": "gateway-factory-troubles"
                },
                {
                    "type": "time-based",
                    "active-for": 305000,
                    "next_state": "failed"
                }
            ]
        },
        {
            "state_name": "gateway-factory-troubles",
            // connection updates overwrite the connection properties of the initial state (defined in infrastructure.jsonc) and prior state updates
            "connection_manipulation_instructions": [
                {
                    "from": "gateway",
                    "to": "factory-server",
                    "loss": 20,
                    "corrupt": 20
                }
            ],
            "machine_manipulation_instructions": [], // keep factory-server cpu limitation in place     
            "application_instructions": [],
            "state_notifications": [
                 {
                    "target_container": "camera",
                    "path": "/state/notifications",
                    "port": 8011
                },
                {
                    "target_container": "temperature-sensor",
                    "path": "/state/notifications",
                    "port": 8012
                }   
            ],
            "transition_conditions": [
                {
                    "type": "time-based",
                    "active-for": 300000,
                    "next_state": "recover"
                },
                {
                    "type": "message-based",
                    "event_name": "dashboard-generated",
                    "threshold": 295,
                    "next_state": "recover"
                },
                {
                    "type": "time-based",
                    "active-for": 305000,
                    "next_state": "failed"
                }
            ]
        },
        {
            "state_name": "recover",
            "connection_manipulation_instructions": "reset",
            "machine_manipulation_instructions": "reset",      
            "application_instructions": [],
            "state_notifications": [
                 {
                    "target_container": "camera",
                    "path": "/state/notifications",
                    "port": 8011
                },
                {
                    "target_container": "temperature-sensor",
                    "path": "/state/notifications",
                    "port": 8012
                }   
            ],
            "transition_conditions": [
                {
                    "type": "time-based",
                    "active-for": 300000,
                    "next_state": "factory-cloud-trouble"
                },
                {
                    "type": "message-based",
                    "event_name": "dashboard-generated",
                    "threshold": 295,
                    "next_state": "factory-cloud-trouble"
                },
                {
                    "type": "time-based",
                    "active-for": 305000,
                    "next_state": "failed"
                }
            ]
        },
        {
            "state_name": "factory-cloud-trouble",
            "connection_manipulation_instructions": [
                {
                    "from": "cloud",
                    "to": "factory-server",
                    "delay": 100
                }
            ],
            "machine_manipulation_instructions": [],      
            "application_instructions": [],
            "state_notifications": [
                 {
                    "target_container": "camera",
                    "path": "/state/notifications",
                    "port": 8011
                },
                {
                    "target_container": "temperature-sensor",
                    "path": "/state/notifications",
                    "port": 8012
                }   
            ],
            "transition_conditions": [
                {
                    "type": "time-based",
                    "active-for": 300000,
                    "next_state": "hot-temperature"
                },
                {
                    "type": "message-based",
                    "event_name": "dashboard-generated",
                    "threshold": 295,
                    "next_state": "hot-temperature"
                },
                {
                    "type": "time-based",
                    "active-for": 305000,
                    "next_state": "failed"
                }
            ]
        },
        {
            "state_name": "hot-temperature",
            "connection_manipulation_instructions": "reset",
            "machine_manipulation_instructions": [],      
            "application_instructions": [
                {
                    "target_container": "temperature-sensor",
                    "path": "/config",
                    "port": 8012,
                    "query_strings": {
                        "min_temp": 110 // as the default max temp is 150, the average temperature is now 130
                    }
                }
            ],
            "state_notifications": [
                 {
                    "target_container": "camera",
                    "path": "/state/notifications",
                    "port": 8011
                },
                {
                    "target_container": "temperature-sensor",
                    "path": "/state/notifications",
                    "port": 8012
                }   
            ],
            "transition_conditions": [
                {
                    "type": "time-based",
                    "active-for": 300000,
                    "next_state": "final"
                },
                {
                    "type": "message-based",
                    "event_name": "dashboard-generated",
                    "threshold": 295,
                    "next_state": "final"
                },
                {
                    "type": "time-based",
                    "active-for": 305000,
                    "next_state": "failed"
                }
            ]
        },
        {
            "state_name": "failed",
            "connection_manipulation_instructions": [],
            "machine_manipulation_instructions": [],
            "application_instructions": [],
            "state_notifications": [
                {
                    "target_container": "camera",
                    "path": "/state/notifications",
                    "port": 8011
                },
                {
                    "target_container": "temperature-sensor",
                    "path": "/state/notifications",
                    "port": 8012
                }
            ],
            "transition_conditions": [
                {
                    "type": "time-based",
                    "active-for": 60000,
                    "next_state": "final"
                }
            ]
        },
        {
            "state_name": "final",
            "connection_manipulation_instructions": "reset",
            "machine_manipulation_instructions": "reset",
            "application_instructions": [
                {
                    "target_container": "temperature-sensor",
                    "path": "/config",
                    "port": 8012,
                    "query_strings": {
                        "min_temp": 50 // revert back to default
                    }
                }
            ],
            "state_notifications": [
                {
                    "target_container": "camera",
                    "path": "/state/notifications",
                    "port": 8011
                },
                {
                    "target_container": "temperature-sensor",
                    "path": "/state/notifications",
                    "port": 8012
                }
            ],
            "transition_conditions": [] // the final state has no transition condition
        }
    ]
}
